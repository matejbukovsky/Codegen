<?php declare(strict_types=1);

namespace Codegen\Templates\Getter;

use Codegen\Templates\AbstractTemplate;
use Nette\PhpGenerator\ClassType;

/**
 * @author Matej Bukovsky <matejbukovsky@gmail.com>
 */
class GetterTemplate extends AbstractTemplate
{

	public function generateCode(): ClassType
	{
		/** @var $annotations \Codegen\Templates\Getter\Getter */
		$annotations = $this->getAnnotations();
		$nullable = isset($annotations->nullable) ? $annotations->nullable : FALSE;
		$classType = $this->getClassType();
		$method = 'get' . ucfirst($this->getPropertyName());

		$this->checkRequiredParam('type');
		$this->checkMethodExistence($method);

		$classType->addMethod($method)
			->addComment('Generated by Codegen.')
			->addComment(sprintf('@return %s', $annotations->type))
			->setVisibility('public')
			->setReturnType($annotations->type)
			->setReturnNullable($nullable)
			->setBody(sprintf('return $this->%s;', $this->getPropertyName()));

		return $classType;
	}

}